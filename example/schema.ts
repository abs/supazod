// Generated by ts-to-zod
import { z } from "zod";
import { Json } from "./types";

const propertyKeySchema = z.union([z.string(), z.number(), z.never()]);

export const jsonSchema: z.ZodSchema<Json> = z.lazy(() =>
  z
    .union([
      z.string(),
      z.number(),
      z.boolean(),
      z.record(jsonSchema),
      z.array(jsonSchema),
    ])
    .nullable(),
);

export const publicUserStatusSchemaSchema = z.union([
  z.literal("ONLINE"),
  z.literal("OFFLINE"),
]);

export const publicUsersInsertSchemaSchema = z.object({
  username: z.string(),
  data: jsonSchema.optional().nullable(),
  age_range: z.unknown().optional().nullable(),
  catchphrase: z.unknown().optional().nullable(),
  status: publicUserStatusSchemaSchema.optional().nullable(),
});

export const publicUsersUpdateSchemaSchema = z.object({
  username: z.string().optional(),
  data: jsonSchema.optional().nullable(),
  age_range: z.unknown().optional().nullable(),
  catchphrase: z.unknown().optional().nullable(),
  status: publicUserStatusSchemaSchema.optional().nullable(),
});

export const publicNonUpdatableViewRowSchemaSchema = z.object({
  username: z.string().nullable(),
});

export const publicGetStatusArgsSchemaSchema = z.object({
  name_param: z.string(),
});

export const publicGetStatusReturnsSchemaSchema = publicUserStatusSchemaSchema;

export const schemaBUserStatusSchema = z.union([
  z.literal("ONLINE"),
  z.literal("OFFLINE"),
]);

export const publicUserStatusSchema = z.union([
  z.literal("ONLINE"),
  z.literal("OFFLINE"),
]);

export const schemaBUsersRowSchemaSchema = z.object({
  username: z.string(),
  data: jsonSchema.nullable(),
  status: publicUserStatusSchema.nullable(),
});

export const schemaBUserStatusSchemaSchema = z.union([
  z.literal("ONLINE"),
  z.literal("OFFLINE"),
]);

export const schemaBUsersUpdateSchemaSchema = z.object({
  data: jsonSchema.optional().nullable(),
  age_range: z.unknown().optional().nullable(),
  catchphrase: z.unknown().optional().nullable(),
  status: schemaBUserStatusSchemaSchema.optional().nullable(),
});

export const schemaBNonUpdatableViewRowSchemaSchema = z.object({
  username: z.string().nullable(),
});

export const schemaBGetDeploymentConfigSchemaArgsSchemaSchema = z.object({});

export const schemaBGetDeploymentConfigSchemaReturnsSchemaSchema = jsonSchema;

export const schemaBGetStatusArgsSchemaSchema = z.object({
  name_param: z.string(),
});

export const schemaBGetStatusReturnsSchemaSchema =
  schemaBUserStatusSchemaSchema;

export const publicUsersRowSchemaSchema = z.object({
  username: z.string(),
  data: jsonSchema.nullable(),
  age_range: z.unknown().nullable(),
  catchphrase: z.unknown().nullable(),
  status: publicUserStatusSchemaSchema.nullable(),
});

export const schemaBUsersInsertSchemaSchema = z.object({
  username: z.string(),
  age_range: z.unknown().optional().nullable(),
  catchphrase: z.unknown().optional().nullable(),
  status: schemaBUserStatusSchemaSchema.optional().nullable(),
});
